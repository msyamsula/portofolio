// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/msyamsula/portofolio/domain/message/service (interfaces: PersistenceLayer)

// Package test is a generated GoMock package.
package test

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	repository "github.com/msyamsula/portofolio/domain/message/repository"
)

// MockPersistenceLayer is a mock of PersistenceLayer interface.
type MockPersistenceLayer struct {
	ctrl     *gomock.Controller
	recorder *MockPersistenceLayerMockRecorder
}

// MockPersistenceLayerMockRecorder is the mock recorder for MockPersistenceLayer.
type MockPersistenceLayerMockRecorder struct {
	mock *MockPersistenceLayer
}

// NewMockPersistenceLayer creates a new mock instance.
func NewMockPersistenceLayer(ctrl *gomock.Controller) *MockPersistenceLayer {
	mock := &MockPersistenceLayer{ctrl: ctrl}
	mock.recorder = &MockPersistenceLayerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPersistenceLayer) EXPECT() *MockPersistenceLayerMockRecorder {
	return m.recorder
}

// AddMessage mocks base method.
func (m *MockPersistenceLayer) AddMessage(arg0 context.Context, arg1 repository.Message) (repository.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddMessage", arg0, arg1)
	ret0, _ := ret[0].(repository.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddMessage indicates an expected call of AddMessage.
func (mr *MockPersistenceLayerMockRecorder) AddMessage(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddMessage", reflect.TypeOf((*MockPersistenceLayer)(nil).AddMessage), arg0, arg1)
}

// GetConversation mocks base method.
func (m *MockPersistenceLayer) GetConversation(arg0 context.Context, arg1, arg2 int64) ([]repository.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConversation", arg0, arg1, arg2)
	ret0, _ := ret[0].([]repository.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConversation indicates an expected call of GetConversation.
func (mr *MockPersistenceLayerMockRecorder) GetConversation(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConversation", reflect.TypeOf((*MockPersistenceLayer)(nil).GetConversation), arg0, arg1, arg2)
}
