// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/msyamsula/portofolio/domain/user/service (interfaces: CacheLayer)

// Package test is a generated GoMock package.
package test

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	repository "github.com/msyamsula/portofolio/domain/user/repository"
)

// MockCacheLayer is a mock of CacheLayer interface.
type MockCacheLayer struct {
	ctrl     *gomock.Controller
	recorder *MockCacheLayerMockRecorder
}

// MockCacheLayerMockRecorder is the mock recorder for MockCacheLayer.
type MockCacheLayerMockRecorder struct {
	mock *MockCacheLayer
}

// NewMockCacheLayer creates a new mock instance.
func NewMockCacheLayer(ctrl *gomock.Controller) *MockCacheLayer {
	mock := &MockCacheLayer{ctrl: ctrl}
	mock.recorder = &MockCacheLayerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCacheLayer) EXPECT() *MockCacheLayerMockRecorder {
	return m.recorder
}

// GetUser mocks base method.
func (m *MockCacheLayer) GetUser(arg0 context.Context, arg1 string) (repository.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUser", arg0, arg1)
	ret0, _ := ret[0].(repository.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUser indicates an expected call of GetUser.
func (mr *MockCacheLayerMockRecorder) GetUser(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUser", reflect.TypeOf((*MockCacheLayer)(nil).GetUser), arg0, arg1)
}

// SetUser mocks base method.
func (m *MockCacheLayer) SetUser(arg0 context.Context, arg1 repository.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetUser", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetUser indicates an expected call of SetUser.
func (mr *MockCacheLayerMockRecorder) SetUser(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetUser", reflect.TypeOf((*MockCacheLayer)(nil).SetUser), arg0, arg1)
}
