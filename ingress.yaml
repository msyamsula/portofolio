apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    # Email address used for ACME registration
    email: culcalcul22@gmail.com
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      # Name of a secret used to store the ACME account private key
      name: letsencrypt-prod-private-key
    # Add a single challenge solver, HTTP01 using nginx
    solvers:
    - http01:
        ingress:
          class: nginx
          

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hello-kubernetes-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/enable-websocket: "true"
spec:
  tls:
    - hosts:
      - syamsul.online
      # - hw2.your_domain
      secretName: hello-kubernetes-tls
  rules:
  - host: syamsul.online
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: hello-kubernetes-second
            port:
              number: 80
      - pathType: Prefix
        path: "/api/url"
        backend:
          service:
            name: url-http-clusterip
            port:
              number: 5000
      - pathType: Prefix
        path: "/api/chat/ws"
        backend:
          service:
            name: chat-server-clusterip
            port:
              number: 8080
      # - pathType: Prefix
      #   path: "/postgres"
      #   backend:
      #     service:
      #       name: postgres-clusterip
      #       port:
      #         number: 5432