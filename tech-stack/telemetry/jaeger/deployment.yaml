# cluster IP
apiVersion: v1
kind: Service
metadata:
  name: jaeger-clusterip
  labels:
    app: jaeger
    type: clusterip
spec:
  type: ClusterIP
  selector:
    app: jaeger
    type: pod
  ports:
    - protocol: TCP
      port: 4317 # service port
      targetPort: 4317 # container port
      name: jaeger-oltp-grpc
    - protocol: TCP
      port: 16686 # service port
      targetPort: 16686 # container port
      name: jaeger-query-ui
    - protocol: TCP
      port: 14250 # service port
      targetPort: 14250 # container port
      name: jaeger-accept-span
    - protocol: TCP
      port: 14269 # service port
      targetPort: 14269 # container port
      name: jaeger-admin-port

---
#Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger-deployment
  labels:
    app: jaeger
    type: deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
      type: pod
  template:
    metadata:
      labels:
        app: jaeger
        type: pod
    spec:
      containers:
      - name: jaeger
        image: jaegertracing/all-in-one
        ports:
        - containerPort: 4317 # OLTP exporter, GRPC
        - containerPort: 14269 #admin port, health check = /, promotheus stryle metrics = /metrics
        - containerPort: 14250 # accept span
        - containerPort: 16686 #http for query UI
        env:
          - name: COLLECTOR_OTLP_ENABLED
            value: "true"
          - name: QUERY_BASE_PATH
            value: "/jaeger"
          # - name: COLLECTOR_ZIPKIN_HOST_PORT
          #   value: ":9411"
        # envFrom:
        #   - secretRef:
        #       name: jaeger-secret
        # command: ["./main"]
        # - configMapRef:
        #     name: postgres-configmap

#Secret
# secret value is left empty, I add it manually to ensure security
# apiVersion: v1
# kind: Secret
# metadata:
#   name: jaeger-secret
# stringData:
#   POSTGRES_USERNAME:
#   POSTGRES_PASSWORD:
#   POSTGRES_DB:
#   POSTGRES_HOST:
#   POSTGRES_PORT:
#   REDIS_PASSWORD:
#   REDIS_HOST:
#   REDIS_PORT:
#   REDIS_TTL:
#   HASHER_LENGTH:
#   HASHER_CHARACTER_POOL:
#   HASHER_HOST:
#   PORT:

# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: postgres-configmap
# data:
#   POSTGRES_USER: 
#   POSTGRES_PASSWORD: 

---
# nodeport, can be closed for better security
# leave it open for debug purpose
# apiVersion: v1
# kind: Service
# metadata:
#   name: jaeger-nodeport
#   labels:
#     app: jaeger
#     type: nodeport
# spec:
#   type: NodePort
#   selector:
#     app: jaeger
#     type: pod
#   ports:
#     - protocol: TCP
#       port: 5000 #container port
#       targetPort: 5000 #service port
#       nodePort: 30002 #open port
#       name: jaeger-nodeport